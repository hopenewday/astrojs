---
/**
 * MobileAd.astro - 320Ã—50 ad format component
 * 
 * This component provides a standardized implementation for mobile banner ads,
 * which are typically displayed on mobile devices at the top or bottom of the viewport.
 */

import AdSlot from './AdSlot.astro';

export interface Props {
  /** Unique identifier for the ad slot */
  id?: string;
  /** Whether to lazy load the ad based on viewport proximity */
  lazyLoad?: boolean;
  /** Additional class names */
  class?: string;
  /** Whether to show a placeholder before the ad loads */
  showPlaceholder?: boolean;
  /** Whether to hide the ad if consent is not given */
  requireConsent?: boolean;
}

const { 
  id = `mobile-${Math.random().toString(36).substring(2, 9)}`,
  lazyLoad = true, 
  class: className = '',
  showPlaceholder = true,
  requireConsent = true
} = Astro.props;
---

<AdSlot
  id={id}
  format="mobile"
  lazyLoad={lazyLoad}
  class={className}
  showPlaceholder={showPlaceholder}
  requireConsent={requireConsent}
>
  <slot />
</AdSlot>

<style>
  /* Mobile-specific styles */
  :global(.ad-format-mobile) {
    position: sticky;
    bottom: 0;
    z-index: var(--z-30);
    background-color: var(--color-background);
    box-shadow: var(--shadow);
    padding: var(--spacing-1) 0;
  }
  
  /* Hide on larger screens if desired */
  @media (min-width: 768px) {
    :global(.mobile-only-ad) {
      display: none;
    }
  }
</style>