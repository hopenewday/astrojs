---
interface BreadcrumbItem {
  text: string;
  href: string;
  current?: boolean;
}

interface Props {
  items: BreadcrumbItem[];
  className?: string;
  showSchema?: boolean;
}

const { items, className = "", showSchema = true } = Astro.props;

// Generate schema.org structured data for breadcrumbs
const breadcrumbSchema = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": items.map((item, index) => ({
    "@type": "ListItem",
    "position": index + 1,
    "name": item.text,
    "item": new URL(item.href, Astro.site).toString()
  }))
};
---

<nav aria-label="Breadcrumb" class:list={["breadcrumbs", className]}>
  <ol>
    {items.map((item, index) => (
      <li>
        {index < items.length - 1 ? (
          <a href={item.href}>{item.text}</a>
        ) : (
          <span aria-current="page">{item.text}</span>
        )}
      </li>
    ))}
  </ol>
</nav>

{showSchema && (
  <script type="application/ld+json" set:html={JSON.stringify(breadcrumbSchema)} />
)}

<style>
  .breadcrumbs {
    margin: 1rem 0;
    font-size: 0.875rem;
  }

  ol {
    display: flex;
    flex-wrap: wrap;
    list-style: none;
    margin: 0;
    padding: 0;
  }

  li {
    display: flex;
    align-items: center;
  }

  li:not(:last-child)::after {
    content: "/";
    margin: 0 0.5rem;
    color: var(--color-text-light, #6b7280);
  }

  a {
    color: var(--color-text-light, #6b7280);
    text-decoration: none;
    transition: color 0.2s;
  }

  a:hover {
    color: var(--color-primary, #3b82f6);
    text-decoration: underline;
  }

  span {
    color: var(--color-text, #1f2937);
    font-weight: 500;
  }

  @media (prefers-color-scheme: dark) {
    a {
      color: var(--color-text-light, #9ca3af);
    }

    span {
      color: var(--color-text, #f3f4f6);
    }
  }
</style>