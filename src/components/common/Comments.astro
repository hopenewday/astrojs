---
/**
 * Comments component using Cusdis
 * Provides a lightweight, privacy-focused comment system
 * Features:
 * - Lazy loading (only loads when scrolled into view)
 * - GDPR compliance (no cookies until interaction)
 * - Theme support (light/dark/auto)
 * - Moderation tools for administrators
 */

interface Props {
  pageId: string;
  pageTitle?: string;
  pageUrl?: string;
  theme?: 'light' | 'dark' | 'auto';
  isAdmin?: boolean;
}

const {
  pageId,
  pageTitle = Astro.props.title || '',
  pageUrl = Astro.url.href,
  theme = 'auto',
  isAdmin = false,
} = Astro.props;

// Get Cusdis configuration from environment variables
const appId = import.meta.env.CUSDIS_APP_ID;
const host = import.meta.env.CUSDIS_HOST || 'https://cusdis.com';

// Check if Cusdis is properly configured
const isCusdisConfigured = Boolean(appId);

// Determine theme based on user preference
const getThemeScript = `
  function getCusdisTheme() {
    const theme = "${theme}";
    if (theme === "auto") {
      return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
    }
    return theme;
  }
`;
---

<div id="comments" class="comments-container">
  <h2>Comments</h2>
  
  {isCusdisConfigured ? (
    <>
      <div id="cusdis_thread"
        data-host={host}
        data-app-id={appId}
        data-page-id={pageId}
        data-page-url={pageUrl}
        data-page-title={pageTitle}
        data-theme={theme}
        data-attribute="data-gdpr-compliant"
        aria-label="Comments section"
      ></div>
      
      <div class="comments-notice" id="comments-notice">
        <p>Comments are powered by Cusdis. By interacting with the comments section, you acknowledge and consent to the Cusdis <a href="https://cusdis.com/privacy-policy" target="_blank" rel="noopener noreferrer">privacy policy</a>.</p>
      </div>
      
      <noscript>
        <div class="comments-error">
          <p>JavaScript is required to load the comments. Please enable JavaScript to view and post comments.</p>
        </div>
      </noscript>
    </>
  ) : (
    <div class="comments-error">
      <p>Comments are currently unavailable. Please check back later.</p>
    </div>
  )}
  
  {isAdmin && isCusdisConfigured && (
    <div class="admin-tools">
      <a href={`${host}/dashboard/project/${appId}`} target="_blank" rel="noopener noreferrer" class="admin-link" aria-label="Moderate comments">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="admin-icon" aria-hidden="true">
          <path d="M12 20h9"></path>
          <path d="M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z"></path>
        </svg>
        Moderate Comments
      </a>
    </div>
  )}
</div>

<script is:inline define:vars={{ host, getThemeScript, isCusdisConfigured }}>
  // Initialize Cusdis only when scrolled into view (lazy loading)
  document.addEventListener('DOMContentLoaded', function() {
    // Only proceed if Cusdis is configured
    if (!isCusdisConfigured) return;
    
    // Create intersection observer for lazy loading
    const commentsSection = document.getElementById('comments');
    const commentsNotice = document.getElementById('comments-notice');
    const cusdisThread = document.getElementById('cusdis_thread');
    let cusdisLoaded = false;
    
    if (commentsSection && cusdisThread) {
      const observer = new IntersectionObserver(function(entries) {
        // If comments section is visible and script hasn't been loaded yet
        if (entries[0].isIntersecting && !cusdisLoaded) {
          cusdisLoaded = true;
          
          // Add theme detection
          eval(getThemeScript);
          
          // Create loading indicator
          const loadingIndicator = document.createElement('div');
          loadingIndicator.className = 'comments-loading';
          loadingIndicator.innerHTML = '<p>Loading comments...</p>';
          cusdisThread.appendChild(loadingIndicator);
          
          // Load the Cusdis script
          var script = document.createElement('script');
          script.src = host + '/js/cusdis.es.js';
          script.async = true;
          script.defer = true;
          
          // Handle script loading errors
          script.onerror = function() {
            if (loadingIndicator) loadingIndicator.remove();
            const errorElement = document.createElement('div');
            errorElement.className = 'comments-error';
            errorElement.innerHTML = '<p>Failed to load comments. Please try again later.</p>';
            cusdisThread.appendChild(errorElement);
          };
          
          // Initialize with the correct theme when loaded
          script.onload = function() {
            // Remove loading indicator
            if (loadingIndicator) loadingIndicator.remove();
            
            // Set GDPR-compliant mode (no cookies until interaction)
            if (window.CUSDIS) {
              // Apply theme
              window.CUSDIS.setTheme(getCusdisTheme());
              
              // Enable GDPR mode if available
              if (typeof window.CUSDIS.setGDPRMode === 'function') {
                window.CUSDIS.setGDPRMode(true);
              }
              
              // Listen for theme changes
              const darkModeMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');
              darkModeMediaQuery.addEventListener('change', function() {
                window.CUSDIS.setTheme(getCusdisTheme());
              });
            }
          };
          
          // Add script to document
          document.body.appendChild(script);
          
          // Stop observing once loaded
          observer.disconnect();
        }
      }, { threshold: 0.1 }); // Start loading when 10% of the comments section is visible
      
      // Start observing the comments section
      observer.observe(commentsSection);
    }
  });
</script>

<style>
  .comments-container {
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 1px solid #e5e7eb;
  }
  
  h2 {
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 1.5rem;
  }
  
  .comments-notice {
    margin-top: 1rem;
    padding: 0.75rem;
    font-size: 0.875rem;
    color: #6b7280;
    background-color: #f9fafb;
    border-radius: 0.375rem;
    border: 1px solid #e5e7eb;
  }
  
  .comments-notice a {
    color: #3b82f6;
    text-decoration: underline;
  }
  
  .comments-notice a:hover {
    text-decoration: none;
  }
  
  .comments-error {
    margin-top: 1rem;
    padding: 0.75rem;
    font-size: 0.875rem;
    color: #991b1b;
    background-color: #fee2e2;
    border-radius: 0.375rem;
    border: 1px solid #fecaca;
  }
  
  .comments-loading {
    margin-top: 1rem;
    padding: 0.75rem;
    font-size: 0.875rem;
    color: #4b5563;
    background-color: #f3f4f6;
    border-radius: 0.375rem;
    border: 1px solid #e5e7eb;
    text-align: center;
  }
  
  .admin-tools {
    margin-top: 1rem;
  }
  
  .admin-link {
    display: inline-flex;
    align-items: center;
    padding: 0.5rem 0.75rem;
    background-color: #f3f4f6;
    color: #4b5563;
    border-radius: 0.375rem;
    font-size: 0.875rem;
    font-weight: 500;
    text-decoration: none;
    transition: background-color 0.2s ease;
  }
  
  .admin-link:hover {
    background-color: #e5e7eb;
  }
  
  .admin-link:focus {
    outline: 2px solid #3b82f6;
    outline-offset: 2px;
  }
  
  .admin-icon {
    margin-right: 0.5rem;
  }
  
  /* Dark mode styles */
  @media (prefers-color-scheme: dark) {
    .comments-container {
      border-top-color: #374151;
    }
    
    .comments-notice {
      background-color: #1f2937;
      color: #9ca3af;
      border-color: #374151;
    }
    
    .comments-notice a {
      color: #60a5fa;
    }
    
    .comments-error {
      background-color: #7f1d1d;
      color: #fecaca;
      border-color: #b91c1c;
    }
    
    .comments-loading {
      background-color: #1f2937;
      color: #9ca3af;
      border-color: #374151;
    }
    
    .admin-link {
      background-color: #1f2937;
      color: #9ca3af;
    }
    
    .admin-link:hover {
      background-color: #374151;
    }
    
    .admin-link:focus {
      outline-color: #60a5fa;
    }
  }
</style>