---
/**
 * MetaTags.astro - Dynamic meta tag generation for SEO
 * 
 * This component generates all necessary meta tags for SEO optimization,
 * including basic meta tags, Open Graph tags, and Twitter Card tags.
 */

interface Props {
  title: string;
  description: string;
  canonicalURL?: string;
  image?: string;
  type?: 'website' | 'article' | 'profile';
  publishDate?: Date;
  modifiedDate?: Date;
  author?: string;
  locale?: string;
  siteName?: string;
  twitterUsername?: string;
  twitterCard?: 'summary' | 'summary_large_image';
  noindex?: boolean;
  nofollow?: boolean;
  keywords?: string[];
}

// Validate required fields
if (!title || !description) {
  throw new Error('MetaTags component requires both title and description');
}

// Validate image URL format
if (image && !/^(https?:\/\/|\/)/.test(image)) {
  throw new Error(`Invalid image URL format: ${image}. Must be absolute or root-relative path`);
}

const {
  title,
  description,
  canonicalURL = Astro.url.href,
  image = '/images/default-og.jpg',
  type = 'website',
  publishDate,
  modifiedDate,
  author = 'ChakrirChain',
  locale = 'en_US',
  siteName = 'ChakrirChain',
  twitterUsername = '@chakrirchain',
  twitterCard = 'summary_large_image',
  noindex = false,
  nofollow = false,
  keywords = [],
  imageWidth = 1200,
  imageHeight = 630,
  imageAlt = '',
  profileUsername,
  profileGender,
} = Astro.props;

// Ensure image URLs are absolute
const ogImageUrl = new URL(image, Astro.site).toString();

// Robots meta tag
const robotsContent = [
  noindex ? 'noindex' : 'index',
  nofollow ? 'nofollow' : 'follow',
].join(', ');
---

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Robots Meta Tag -->
<meta name="robots" content={robotsContent} />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Language -->
<meta property="og:locale" content={locale} />

<!-- Keywords (if provided) -->
{keywords.length > 0 && <meta name="keywords" content={keywords.join(', ')} />}

<!-- Open Graph / Facebook -->
<meta property="og:type" content={type} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={ogImageUrl} />
<meta property="og:image:width" content={imageWidth.toString()} />
<meta property="og:image:height" content={imageHeight.toString()} />
<meta property="og:image:alt" content={imageAlt} />
{type === 'profile' && profileUsername && (
  <meta property="profile:username" content={profileUsername} />
)}
{type === 'profile' && profileGender && (
  <meta property="profile:gender" content={profileGender} />
)}
<meta property="og:site_name" content={siteName} />

<!-- Article specific meta tags -->
{publishDate && <meta property="article:published_time" content={publishDate.toISOString()} />}
{modifiedDate && <meta property="article:modified_time" content={modifiedDate.toISOString()} />}
{author && <meta property="article:author" content={author} />}

<!-- Twitter -->
<meta property="twitter:card" content={twitterCard} />
<meta property="twitter:url" content={canonicalURL} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={ogImageUrl} />
{twitterUsername && <meta property="twitter:site" content={twitterUsername} />}
{twitterUsername && <meta property="twitter:creator" content={twitterUsername} />}