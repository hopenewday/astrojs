---
import MainLayout from "../layouts/MainLayout.astro";
import Header from "../components/header/Header.astro";
import MainGrid from "../components/home/MainGrid.astro";
import FeaturedArticles from "../components/home/FeaturedArticles.astro";
import CategoryHighlights from "../components/home/CategoryHighlights.astro";

// Import content collections
import { getCollection } from 'astro:content';

// State for loading and error handling
let isLoading = true;
let error = null;
let articles = [];
let categories = [];

try {
  // Fetch articles from content collection
  const articlesCollection = await getCollection('articles', ({ data }) => {
    // Only include published articles (not drafts)
    return !data.draft;
  });
  
  // Transform the data to match the expected format
  articles = await Promise.all(articlesCollection.map(async (article) => {
    // Get the author and category information
    const authorEntry = await getCollection('authors', ({ id }) => id === article.data.author);
    const categoryEntry = await getCollection('categories', ({ id }) => id === article.data.category);
    
    const author = authorEntry[0];
    const category = categoryEntry[0];
    
    return {
      id: article.id,
      title: article.data.title,
      slug: article.slug,
      excerpt: article.data.description,
      image: article.data.image.src,
      category: {
        name: category?.data.name || 'Uncategorized',
        slug: category?.slug || 'uncategorized'
      },
      author: {
        name: author?.data.name || 'Unknown Author',
        slug: author?.slug || 'unknown',
        avatar: author?.data.avatar?.src
      },
      publishDate: article.data.publishDate,
      featured: article.data.featured,
      videoUrl: article.data.videoUrl,
      content: article.body
    };
  }));
  
  // Fetch categories from content collection
  const categoriesCollection = await getCollection('categories');
  
  // Transform categories data
  categories = categoriesCollection.map(category => ({
    name: category.data.name,
    slug: category.slug,
    count: articles.filter(article => article.category.slug === category.slug).length,
    color: category.data.color
  }));
  
  isLoading = false;
} catch (err) {
  console.error('Error fetching content:', err);
  error = err.message || 'Failed to load content';
  isLoading = false;
  
  // Fallback data in case of error
  if (articles.length === 0) {
    articles = [
      {
        id: "fallback-1",
        title: "Sample Article",
        slug: "sample-article",
        excerpt: "This is a sample article that appears when content cannot be loaded.",
        image: "/images/placeholder.svg",
        category: { name: "General", slug: "general" },
        author: { name: "Site Admin", slug: "admin" },
        publishDate: new Date(),
        featured: true
      }
    ];
  }
}

const featuredArticles = articles.filter(article => article.featured);
const recentArticles = [...articles].sort((a, b) => 
  b.publishDate.getTime() - a.publishDate.getTime()
);
---

<MainLayout 
  title="ChakrirChain Magazine - Latest Articles and Insights"
  description="Explore the latest articles on technology, business, lifestyle, and more from ChakrirChain Magazine."
  ogType="website"
>
  <div class="container mx-auto px-4 py-8">
    <section class="mb-12">
      <h1 class="text-4xl font-bold mb-6">Featured Articles</h1>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        {featuredArticles.map(article => (
          <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden">
            <img 
              src={article.image} 
              alt={article.title}
              class="w-full h-64 object-cover"
            />
            <div class="p-6">
              <span class="text-sm text-blue-600 dark:text-blue-400">{article.category.name}</span>
              <h2 class="text-2xl font-bold mt-2 mb-3">
                <a href={`/article/${article.slug}`} class="hover:text-blue-600 dark:hover:text-blue-400 transition">
                  {article.title}
                </a>
              </h2>
              <p class="text-gray-600 dark:text-gray-300 mb-4">{article.excerpt}</p>
              <div class="flex items-center">
                <img 
                  src={article.author.avatar} 
                  alt={article.author.name}
                  class="w-10 h-10 rounded-full mr-4"
                />
                <div>
                  <p class="font-medium">{article.author.name}</p>
                  <p class="text-sm text-gray-500 dark:text-gray-400">
                    {article.publishDate.toLocaleDateString('en-US', { 
                      year: 'numeric', 
                      month: 'long', 
                      day: 'numeric' 
                    })}
                  </p>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </section>

    <section class="mb-12">
      <h2 class="text-3xl font-bold mb-6">Recent Articles</h2>
      <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
        {recentArticles.map(article => (
          <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden">
            <img 
              src={article.image} 
              alt={article.title}
              class="w-full h-48 object-cover"
            />
            <div class="p-4">
              <span class="text-xs text-blue-600 dark:text-blue-400">{article.category.name}</span>
              <h3 class="text-xl font-bold mt-1 mb-2">
                <a href={`/article/${article.slug}`} class="hover:text-blue-600 dark:hover:text-blue-400 transition">
                  {article.title}
                </a>
              </h3>
              <p class="text-sm text-gray-600 dark:text-gray-300 mb-3 line-clamp-2">{article.excerpt}</p>
              <div class="flex items-center text-sm">
                <span class="font-medium mr-2">{article.author.name}</span>
                <span class="text-gray-500 dark:text-gray-400">
                  {article.publishDate.toLocaleDateString('en-US', { 
                    year: 'numeric', 
                    month: 'short', 
                    day: 'numeric' 
                  })}
                </span>
              </div>
            </div>
          </div>
        ))}
      </div>
    </section>

    <section>
      <h2 class="text-3xl font-bold mb-6">Browse by Category</h2>
      <div class="grid grid-cols-2 md:grid-cols-5 gap-4">
        {categories.map(category => (
          <a 
            href={`/category/${category.slug}`}
            class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-4 text-center hover:bg-blue-50 dark:hover:bg-gray-700 transition"
          >
            <h3 class="font-bold mb-1">{category.name}</h3>
            <p class="text-sm text-gray-500 dark:text-gray-400">{category.count} articles</p>
          </a>
        ))}
      </div>
    </section>
  </div>
</MainLayout>